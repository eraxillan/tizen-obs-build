#!/usr/bin/perl -w

use Net::SSL ();
BEGIN {
  $ENV{PERL_LWP_SSL_VERIFY_HOSTNAME} = 0,
  unshift @INC, ($::ENV{'BUILD_DIR'} || '/usr/lib/build');
}

use LWP::UserAgent;
use URI;
use File::Path;
use File::Basename;
use Net::FTP;

use strict;

sub hide_passwd {
    my $url = shift;
    $url =~ s|://[^@]*@|://|;
    return $url
}

die "USAGE: $0 DIR URLS..." unless $#ARGV >= 1;

my $dir = shift @ARGV;

my $ua = LWP::UserAgent->new(
  agent => "openSUSE build script",
  timeout => 42);

for my $url (@ARGV) {
  my $original = $url;
  if ($url =~ /^zypp:\/\/([^\/]*)\/?/) {
    use Build::Zypp;
    my $repo = Build::Zypp::parsecfg($1);
    die "can't parse $1\n" unless $repo;
    die "missing url in repo ".$repo->{'name'}."\n" unless exists $repo->{'baseurl'};
    my $u = $repo->{'baseurl'};
    $u .= '/' unless substr($u, -1, 1) eq '/';
    $url =~ s/^zypp:\/\/[^\/]*\/*//;
    $url = URI->new($u.$url)
  } else {
    my $found = 0;
    if ( defined $ENV{BUILD_ROOT} && -e $ENV{BUILD_ROOT} . "/.repo.config" ) {
        open FILE, "<", $ENV{BUILD_ROOT} . "/.repo.config" or die $!;
        while (<FILE>) {
            next if ($_ !~ /^http[s]?:\/\/([^\/]*)\/?/);
            next if ($_ !~ /^ftp[s]?:\/\/([^\/]*)\/?/);
            chomp($_);
            my $hidden = URI->new($_);
            my $ui = $hidden->userinfo;
            $hidden->userinfo(undef);
            if ( $url =~ m/^$hidden/ ) {
                $url = URI->new($url);
                $url->userinfo($ui);
                $found = 1;
                last;
            }
        }
        close FILE;
    }
    if ($found == 0 ) {
        $url = URI->new($url);
    }
  }
  $ua->env_proxy  if $url->scheme ne 'https';
  my $dest = "$dir/".basename($url->path).".tmp";
  unlink($dest);	# just in case

  if ($url->scheme eq "ftp") {
    my $ftp = Net::FTP->new($url->host, Debug => 0, Passive => 1, Port => $url->port)
      or die "Cannot connect to FTP server: $@";

    $ftp->login("anonymous", '')
      or die "Cannot login to FTP server: ", $ftp->message;

    $ftp->binary();

    $ftp->get($url->path, $dest)
      or die "GET method from FTP server failed: ", $ftp->message;

    $ftp->quit;
  } else {
    my $retry = 3;
    while ($retry--) {
      my $res = $ua->mirror($url, $dest);
      last if $res->is_success;
      # if it's a redirect we probably got a bad mirror and should just retry
      die "requesting " . hide_passwd($original) . " failed: ".$res->status_line."\n" unless $retry && $res->previous;
      warn "retrying " . hide_passwd($original) . "\n";
    }
  }

  rename($dest, "$dir/".basename($url->path));
  print STDERR "File downloaded: ", "$dir/".basename($url->path), "\n";
}

# vim:sw=2
